image: docker:latest

# TODO: This doesn't work. Try searching for other caching strategies.
# cache:
#   paths:
#   - node_modules/

services:
  - docker:dind # TODO: Try to remove this ':dind'

stages:
  - build
  - deploy

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY


# build stage

build:
  stage: build
  script:
    - docker build --pull --build-arg vue_build_mode=$CI_COMMIT_REF_SLUG -t "$CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG" ./client
    - docker push "$CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_REF_SLUG"
  except:
    - master

build-master:
  stage: build
  script:
    - docker build --pull --build-arg vue_build_mode=master -t "$CI_REGISTRY_IMAGE/web" ./client
    - docker push "$CI_REGISTRY_IMAGE/web"
    - docker build --pull -t "$CI_REGISTRY_IMAGE/api" .
    - docker push "$CI_REGISTRY_IMAGE/api"
  only:
    - master


# deploy stage

deploy-develop:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - which ssh-agent || (apk add --update openssh-client)
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H dev.steffbeckers.eu >> ~/.ssh/known_hosts
  script:
    - scp -r ./docker-compose.development.yml root@dev.steffbeckers.eu:~/compositions/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG/docker-compose.yml
    - ssh root@dev.steffbeckers.eu "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; cd ~/compositions/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG/; docker pull "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_REF_SLUG"; docker pull "$CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG"; docker stack deploy --compose-file docker-compose.yml mysnookerskills$CI_COMMIT_REF_SLUG --with-registry-auth"
  only:
    - develop

deploy-test:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - which ssh-agent || (apk add --update openssh-client)
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H dev.steffbeckers.eu >> ~/.ssh/known_hosts
  script:
    - scp -r ./docker-compose.testing.yml root@dev.steffbeckers.eu:~/compositions/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG/docker-compose.yml
    - ssh root@dev.steffbeckers.eu "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; cd ~/compositions/$CI_PROJECT_PATH/$CI_COMMIT_REF_SLUG/; docker pull "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_REF_SLUG"; docker pull "$CI_REGISTRY_IMAGE/web:$CI_COMMIT_REF_SLUG"; docker stack deploy --compose-file docker-compose.yml mysnookerskills$CI_COMMIT_REF_SLUG --with-registry-auth"
  only:
    - test

deploy:
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - which ssh-agent || (apk add --update openssh-client)
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H dev.steffbeckers.eu >> ~/.ssh/known_hosts
  script:
    - scp -r ./docker-compose.yml root@dev.steffbeckers.eu:~/compositions/$CI_PROJECT_PATH/docker-compose.yml
    - ssh root@dev.steffbeckers.eu "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; cd ~/compositions/$CI_PROJECT_PATH/; docker pull "$CI_REGISTRY_IMAGE/api"; docker pull "$CI_REGISTRY_IMAGE/web"; docker-compose up -d"
  only:
    - master
