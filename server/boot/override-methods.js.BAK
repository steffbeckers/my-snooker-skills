'use strict';

var utils = require('loopback-component-passport/lib/models/utils');

function stringToRef(object, reference) {
  function arrDeref(o, ref, i) {
    return !ref ? o : o[ref.slice(0, i ? -1 : ref.length)];
  }
  function dotDeref(o, ref) {
    return ref.split('[').reduce(arrDeref, o);
  }
  return !reference ? object : reference.split('.').reduce(dotDeref, object);
}

module.exports = function overrideMethods(server) {
  var userIdentity = server.models.userIdentity;

  userIdentity.profileToUser = function(
    provider, profile, options
  ) {
    var password, userObj;

    if (!options.profileMapping) {
      // Let's create a user for that
      var profileEmail =
        profile.emails && profile.emails[0] && profile.emails[0].value;
      var generatedEmail =
        (profile.username || profile.id) +
        '@loopback.' +
        (profile.provider || provider) +
        '.com';
      var email = provider === 'ldap' ? profileEmail : generatedEmail;
      var username = provider + '.' + (profile.username || profile.id);
      password = utils.generateKey('password');
      userObj = {
        username: username,
        password: password,
      };
      if (email) {
        userObj.email = email;
      }
      return userObj;
    } else {
      password = utils.generateKey('password');
      userObj = {
        password: password,
      };
      // if profileMapping exists, map each provider field to the appropriate user field
      options.profileMapping.forEach(function(field) {
        userObj[field.userField] = stringToRef(profile, field.providerField);
      });
    }
    return userObj;
  };
};
